% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fun_$_transformations.R
\name{beta_logit_tran_inverse_dep}
\alias{beta_logit_tran_inverse_dep}
\title{Inverse Beta Logit Transformation}
\usage{
beta_logit_tran_inverse_dep(z, bl4)
}
\arguments{
\item{z}{A numeric vector representing the transformed data to be
back-transformed.}

\item{bl4}{A numeric vector of length four providing the transformation
parameters: the lower (`a`) and upper (`b`) bounds of the original data's
domain, and the `b1` and `b2` parameters of the beta distribution function.}
}
\value{
A numeric vector of the same length as `z`, containing the
back-transformed values, aiming to reflect the original observations.
}
\description{
Reverses the beta logit transformation applied by
`beta_logit_tran`, converting a numeric vector `z` from an unbounded range
back to its original bounded domain. This process involves applying the
inverse logit function to `z`, using the inverse beta cumulative distribution
 function, and then scaling the result back to the original domain defined by
 parameters `a` and `b`. It is useful for interpreting the results of
analyses performed on data transformed by `beta_logit_tran`, allowing the
transformed values to be mapped back to their original scale.
}
\details{
The inverse transformation process consists of the following steps:
\enumerate{
  \item Apply the inverse logit function to `z`, mapping it from an unbounded range to (0,1).
  \item Use the inverse beta cumulative distribution function with parameters `b1` and `b2` to
       find the corresponding quantile values.
  \item Scale these values back to the original domain of the data, defined by the lower (`a`)
       and upper (`b`) bounds.
}
This function enables the recontextualization of model outputs or analyses
back to the practical, bounded domain of the original data, facilitating
interpretation and decision-making.
}
\examples{
\dontrun{
x <- seq(0, 1, length.out = 101)
bl4 <- c(0, 1, 2, 2)  # beta logit transformation parameters
transformed_x <- beta_logit_tran(x, bl4, TRUE)
back_transformed_x <- beta_logit_tran_inverse(transformed_x, bl4, TRUE)
}

}
\seealso{
\code{\link[stats]{qbeta}} for details on beta distribution
  functions.
  \code{\link{transform_data}},
  \code{\link{beta_logit_tran}},
  \code{\link{fisherZ}},
  \code{\link{fisherZ_inverse}},
  \code{\link{transform_data_inverse}}
}
\keyword{internal}
