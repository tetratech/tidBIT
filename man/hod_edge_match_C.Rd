% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fun_$_hod_edge_match_C.R
\name{hod_edge_match_C}
\alias{hod_edge_match_C}
\title{Edge Matching for Higher-Order Dimensions}
\usage{
hod_edge_match_C(int_grid, real_y, debug = 0)
}
\arguments{
\item{int_grid}{A data frame or tibble containing the grid structure. Must
include the columns `i`, `j`, `k`, `water_mask`, and `water_mask_id`.}

\item{real_y}{A numeric matrix where adjustments are applied. The dimensions
of this matrix are flexible and depend on the specific use case.}
}
\value{
The `real_y` matrix, updated in place with adjustments based on the
edge matching algorithm.
}
\description{
This function is a wrapper around a C-based implementation for edge matching
across higher-order dimensions. It adjusts values in the `real_y` matrix based
on grouped summaries derived from the `int_grid` object.
}
\details{
This function preprocesses the `int_grid` to identify contiguous blocks of
rows with valid water masks (where `water_mask == 1`). For each group defined
by unique combinations of `i`, `j`, and `k`, it computes the range of indices
(`water_mask_id_first` to `water_mask_id_last`) and applies edge adjustments
to the `real_y` matrix.

The edge matching operation is implemented in C using OpenMP for parallelism.
Warnings are issued for groups where no valid range exists, and these groups
are skipped.
}
\examples{
# Example int_grid and real_y
int_grid <- tibble::tibble(
  i = c(1, 1, 1, 2, 2, 2),
  j = c(1, 1, 1, 1, 1, 1),
  k = c(1, 1, 1, 1, 1, 1),
  row_id = 1:6
)
real_y <- matrix(1:36, nrow = 6, ncol = 6, byrow=TRUE)

# Perform edge matching
updated_real_y <- hod_edge_match_C(int_grid, real_y)

}
