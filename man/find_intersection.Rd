% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fun_mapping_tools.R
\name{find_intersection}
\alias{find_intersection}
\title{Find intersection of Two Touching Polygons}
\usage{
find_intersection(sf_poly = NA, col_name = NA)
}
\arguments{
\item{sf_poly}{An `sf` object containing at least two polygons from which the
intersection is to be found. It is assumed that the two polygons are
touching or overlapping.}

\item{col_name}{The name of the attribute in `sf_poly` which uniquely
identifies the polygons. This parameter is currently not utilized within
the function but is reserved for future enhancements that might require
attribute-based operations.}
}
\value{
An `sf` object representing the geometric intersection of the first
  two polygons in `sf_poly`, with coordinates in WGS84 CRS. If the polygons
  do not intersect, the function returns an empty `sf` object.
}
\description{
Computes the geometric intersection of two touching polygons
  from a single `sf` layer. This function is particularly useful for
  identifying shared boundaries or overlap areas between adjacent polygons.
  The function first transforms the coordinate reference system (CRS) of the
  polygons to UTM (Universal Transverse Mercator), assuming the Mid-Atlantic
  region for the UTM zone. After computing the intersection in the UTM CRS to
  maintain accuracy, the resulting geometry is transformed back to WGS84
  latitude and longitude coordinates for compatibility with most mapping
  applications.
}
\note{
The function currently transforms the CRS to UTM zone 18N, which is
  suitable for the Mid-Atlantic region of the USA. Adjustments may be
  required for other regions.
}
\examples{
# Assuming `sf_poly` is an sf object containing at least two polygons
intersection <- find_intersection(sf_poly)
# View the resulting intersection geometry
plot(intersection)

}
\seealso{
\code{\link[sf]{st_transform}}, for CRS transformations.
\code{\link[sf]{st_intersection}}, for computing geometric intersections.
}
