% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/report_diagnostics.R
\name{report_diagnostics}
\alias{report_diagnostics}
\title{CB4D Diagnostics Report}
\usage{
report_diagnostics(
  fn_model_rda = NULL,
  dn_model_rda = NULL,
  format_rmd = "html",
  path_rmd = NULL,
  report_volume = NULL,
  dn_results = file.path(tempdir(), , "diagnostics_results"),
  fn_report_prefix = "cb4d_diagnostics~",
  quiet = FALSE
)
}
\arguments{
\item{fn_model_rda}{CB4D model output RDA files, single value or vector of
filenames.}

\item{dn_model_rda}{Directory containing all of the model RDA files.  If
files are in separate folders provide a vector of the same length as
fn_model_rda}

\item{format_rmd}{Notebook (RMD) output format, 'html' or 'docx'.
Default = "html"}

\item{path_rmd}{Path (directory and file name) of Notebook (RMD) file.}

\item{report_volume}{Report version (volume); 1 or 2.  Default = NULL}

\item{dn_results}{Directory to save created notebook(s). The directory will
be created if it does not exist.  Default is tempdir()}

\item{fn_report_prefix}{Prefix for generated Notebook output.  The base name
of the file will be the base name of the input RDA file.
Default = "cb4d_diagnostics~"}

\item{quiet}{Should printing of messages be suppressed.  This includes this
function and during rendering of the document (rmarkdown::render).
Default = TRUE}
}
\description{
Create diagnostics report for CB4D model output
}
\details{
Default output is an HTML report in temporary directory.  But a Word document
(docx) is also an option.

To switch between volume 1 and 2 reports change the parameters "path_rmd" and
"report_volume" to the correct report template and volume number.

The default report templates are contained in the package but user versions
can be used as well.

The report objects are created by the internal function `report_objects` and
are derived from the 4D model output files (in RDA format).  As long as the
objects are in the "env_cb4d" environment they can be used in the report.

Users can access the temp directory, in Windows, from the R console via
`shell.exec(tempdir())`.
}
\examples{

# Example 1, Select File(s), file name
fn_model_rda     <- "do~CB3~datahub~2016-2018~2023_10_07_005~by_term2~none.rda"
dn_model_rda     <- system.file("extdata", package = "tidBITcore")

# Other input parameters
format_rmd       <- "html"
path_rmd         <- file.path(system.file("rmd", package = "tidBITcore"),
                              "cb4d_model_diagnostics_vol01_report.Rmd")
report_volume    <- 1
# use defaults for last 3 parameters
dn_results       <- file.path(tempdir(), "diagnostics_results")
fn_report_prefix <- "cb4d_model_report_vol01~"
quiet            <- FALSE

# Run Function
report_diagnostics(fn_model_rda,
                   dn_model_rda,
                   format_rmd,
                   path_rmd,
                   report_volume,
                   dn_results,
                   fn_report_prefix,
                   quiet)
# open results folder (Windows only)
shell.exec(dn_results)


# Example 2, Select File(s), dialog box (Windows only)
#if (!require(tcltk)) {install.packages("tcltk")}  #install if needed
#library(tcltk)
### get full path so have to convert for use with function
#path_model_rda  <- tcltk::tk_choose.files()
#fn_model_rda    <- basename(path_model_rda)
#dn_model_rda    <- dirname(path_model_rda)

fn_model_rda     <- "do~CB3~datahub~2016-2018~2023_10_07_005~by_term2~none.rda"
dn_model_rda     <- system.file("extdata", package = "tidBITcore")

# Other input parameters
format_rmd       <- "html"
path_rmd         <- file.path(system.file("rmd", package = "tidBITcore"),
                              "cb4d_model_diagnostics_vol02_report.Rmd")
report_volume    <- 2
# use defaults for last 3 parameters
dn_results       <- file.path(tempdir(), "diagnostics_results")
fn_report_prefix <- "cb4d_model_report_vol02~"
quiet            <- FALSE

# Run Function
report_diagnostics(fn_model_rda,
                   dn_model_rda,
                   format_rmd,
                   path_rmd,
                   report_volume,
                   dn_results,
                   fn_report_prefix,
                   quiet)
# open results folder (Windows only)
shell.exec(dn_results)

}
