% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fun_beta_logit.R
\name{transform_data_inverse}
\alias{transform_data_inverse}
\title{Inverse Transformation of Data}
\usage{
transform_data_inverse(y, trans_name, trans_parms, show_msgs = FALSE)
}
\arguments{
\item{y}{A numeric vector of transformed observations to be back-transformed.}

\item{trans_name}{A character string specifying the type of transformation to
reverse. Supported values include "none", "log", and those starting with
"BL_" for beta logit transformations.}

\item{trans_parms}{A numeric vector or other relevant parameters required by
the transformation to be reversed. For beta logit transformations, this
should be a numeric vector specifying the parameters of the transformation.}

\item{show_msgs}{Logical; if `TRUE`, messages will be issue where applicable}
}
\value{
A numeric vector containing the back-transformed data, aiming to
reflect the original observations before any transformation was applied.
}
\description{
Applies the inverse of a specified transformation to a numeric
vector `y` based on the transformation name (`trans_name`) and parameters
(`trans_parms`). This function reverses the effects of transformations
applied by `transform_data` or similar functions, returning the data to its
original scale. Supports reversing no transformation, logarithmic, and beta
logit transformations specified by `trans_name`.
}
\details{
When `trans_name` is:
\itemize{
  \item{"none"}{No transformation is reversed, and `y` is returned as-is, implying the data
     remains on its original scale.}
  \item{"log"}{An exponential transformation is applied to each element of `y`, reversing the
     logarithmic transformation.}
  \item{startsWith("BL_")}{An inverse beta logit transformation, as defined by the
     `beta_logit_tran_inverse` function, is applied using the parameters specified in `trans_parms`,
     returning the data to its original bounded domain.}
}
It's crucial to match the transformation name and parameters with those used
 in the initial transformation to ensure accurate reversal.
}
\examples{
\dontrun{
# Assuming y has been transformed using a log transformation
y <- log(c(1, 2, 3, 4, 5))
# Reverse log transformation
transform_data_inverse(y, "log", NULL)

# Assuming y has been transformed using a beta logit transformation
trans_parms <- c(0.1, 0.9, 2, 2)
y <- beta_logit_tran(c(1, 2, 3, 4, 5), trans_parms)
# Reverse beta logit transformation
transform_data_inverse(y, "BL_example", trans_parms)
}

}
\seealso{
\code{\link{beta_logit_tran_inverse}}, for details on the inverse beta logit transformation.
\code{\link{exp}}, for information on the exponential function used to reverse logarithmic transformations.
}
