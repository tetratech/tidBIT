% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fun_$_transformations.R
\name{transform_data_inverse}
\alias{transform_data_inverse}
\title{Inverse Transformation of Data}
\usage{
transform_data_inverse(y, trans_name, trans_parms, show_msgs = FALSE)
}
\arguments{
\item{y}{A numeric vector of transformed observations to be back-transformed.}

\item{trans_name}{A character string specifying the type of transformation to
reverse. Supported values include "none", "log", and those starting with
"BL_" for beta logit transformations.}

\item{trans_parms}{A numeric vector or other relevant parameters required by
the transformation to be reversed. For beta logit transformations, this
should be a numeric vector specifying the parameters of the transformation.}

\item{show_msgs}{Logical; if `TRUE`, messages will be issued where applicable.}
}
\value{
A numeric vector containing the back-transformed data, aiming to
reflect the original observations before any transformation was applied.
}
\description{
Applies the inverse of a specified transformation to a numeric
  vector `y_obs` based on the transformation name (`trans_name`) and
  parameters (`trans_parms`). Supports no inverse transformation,
  logarithmic, beta logit, and Fisher Z transformations specified by
  `trans_name`. This function allows for flexible data manipulation in
  preprocessing steps, where different types of transformations might be
  required based on the characteristics of the data or the analytical
  requirements.
}
\details{
When `trans_name` is:
\itemize{
  \item{"none": No transformation is reversed, and `y` is returned as-is, implying the data
     remains on its original scale.}
  \item{"log": An exponential transformation is applied to each element of `y`, reversing the
     logarithmic transformation.}
  \item{starts with "BL_": An inverse beta logit transformation, as defined by the
     `beta_logit_tran_inverse` function, is applied using the parameters specified in `trans_parms`,
     returning the data to its original bounded domain.}
  \item {"fisherZ": An inverse Fisher Z transformation is applied, as defined
  by the `fisherZ_inverse` function.}
}

It's crucial to match the transformation name and parameters with those used
 in the initial transformation to ensure accurate reversal.
}
\examples{
y_obs <- c(1, 2, 3, 4, 5)
# No transformation
y <- transform_data(y_obs, "none", NULL)
transform_data_inverse(y, "none", NULL)

# Logarithmic transformation
y <- transform_data(y_obs, "log", NULL)
transform_data_inverse(y, "log", NULL)

# Beta logit transformation (example parameters)
trans_parms <- c(0.1, 6, 2, 2)
y <- transform_data(y_obs, "BL_example", trans_parms)
transform_data_inverse(y, "BL_example", trans_parms)

}
\seealso{
\code{\link[stats]{qbeta}} for details on beta distribution
  functions.
  \code{\link{transform_data}},
  \code{\link{beta_logit_tran}},
  \code{\link{beta_logit_tran_inverse}},
  \code{\link{fisherZ}},
  \code{\link{fisherZ_inverse}}
}
