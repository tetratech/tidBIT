% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fun_$_general_plotting_00.R
\name{plot_bivariate_data}
\alias{plot_bivariate_data}
\title{Create a Bivariate Plot}
\usage{
plot_bivariate_data(
  df,
  x_var,
  y_var,
  xlab = x_var,
  ylab = y_var,
  ref_line = NA,
  smooth_line = FALSE,
  plot_title = NA,
  na.rm = TRUE,
  plot_type = "all",
  n = 3000,
  sym_color = "gray40",
  alpha = 0.35,
  bins = 30,
  bin_color_low = "gray75",
  bin_color_high = "gray5",
  ref_line_color = "red",
  ref_line_width = 1,
  ref_line_type = "solid",
  smooth_line_color = "blue",
  smooth_line_width = 1,
  smooth_line_type = "dashed"
)
}
\arguments{
\item{df}{A data frame containing the data to be plotted.}

\item{x_var}{A character string specifying the column name for the x variable.}

\item{y_var}{A character string specifying the column name for the y variable.}

\item{xlab}{A character string specifying the label for the x-axis.
Default = x_var}

\item{ylab}{A character string specifying the label for the y-axis.
Default = y_var}

\item{ref_line}{A numeric vector of length 2 specifying the slope and intercept of a reference line. Defaults to `NA`.}

\item{smooth_line}{Logical; if `TRUE`, adds a smooth line to the plot. Defaults to `FALSE`.}

\item{plot_title}{A character string specifying the title for the plot. Defaults to `NA`.}

\item{na.rm}{Logical; if `TRUE`, removes missing values before plotting. Defaults to `TRUE`.}

\item{plot_type}{A character string specifying the type of plot ("all", "thin", or "hex"). Defaults to `"all"`.}

\item{n}{An integer specifying the maximum number of points to plot. Defaults to `3000`.}

\item{sym_color}{A character string specifying the color of the points. Defaults to `"gray40"`.}

\item{alpha}{A numeric value specifying the transparency of the points. Defaults to `0.35`.}

\item{bins}{An integer specifying the number of bins for hex plots. Defaults to `30`.}

\item{bin_color_low}{A character string specifying the low color for hex bins. Defaults to `"gray75"`.}

\item{bin_color_high}{A character string specifying the high color for hex bins. Defaults to `"gray5"`.}

\item{ref_line_color}{A character string specifying the color of the reference line. Defaults to `"red"`.}

\item{ref_line_width}{A numeric value specifying the width of the reference line. Defaults to `1`.}

\item{ref_line_type}{A character string specifying the line type of the reference line. Defaults to `"solid"`.}

\item{smooth_line_color}{A character string specifying the color of the smooth line. Defaults to `"blue"`.}

\item{smooth_line_width}{A numeric value specifying the width of the smooth line. Defaults to `1`.}

\item{smooth_line_type}{A character string specifying the line type of the smooth line. Defaults to `"dashed"`.}
}
\value{
A ggplot object representing the bivariate plot.
}
\description{
This function creates a bivariate plot for two specified variables from a data frame.
The plot can include points, hex bins, reference lines, and smooth lines.
}
\details{
The function creates a scatter plot of the specified x and y variables. It supports different
plot types (points, hex bins) and adds optional reference lines and smooth lines. Data can be thinned
if the number of points exceeds a specified maximum.
}
\examples{
\dontrun{
df <- data.frame(x = rnorm(1000), y = rnorm(1000))
plot_bivariate_data(df, "x", "y", "X-axis Label", "Y-axis Label")
plot_bivariate_data(df, "x", "y", "X-axis Label", "Y-axis Label",
                     ref_line = c(1,1), smooth_line = TRUE)
}

}
\seealso{
\code{\link{plot_obs_pred_res}}
}
