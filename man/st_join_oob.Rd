% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fun_mapping_tools.R
\name{st_join_oob}
\alias{st_join_oob}
\title{Spatially join points to polygons}
\usage{
st_join_oob(sf_obj_point, sf_obj_poly, col_name)
}
\arguments{
\item{sf_obj_point}{An `sf` object containing POINT geometries that will be
spatially joined to polygons.}

\item{sf_obj_poly}{An `sf` object containing POLYGON or MULTIPOLYGON
geometries to which points will be joined.}

\item{col_name}{The name of the attribute in `sf_obj_poly` used to perform
the join and to populate the "near" and "near_km" columns for out of bounds
points.}
}
\value{
An `sf` object of the points layer with additional columns: 
- A column named after `col_name` containing the attribute values from the joined
polygons, or `NA` if the point is out of bounds.
- A column (`col_name_near`) indicating the nearest polygon's attribute value for
out of bounds points.
- A column (`col_name_near_km`) indicating the distance in kilometers to the
nearest polygon for out of bounds points.

The geometry of the returned `sf` object is the same as the input points layer.
}
\description{
Spatially Join Points to Polygons with Out of Bounds Handling

Performs a spatial join between point and polygon layers,
  extending functionality to handle "out of bounds" points by identifying the
  nearest polygon and calculating the distance to it. This function is
  particularly useful for datasets where some points may not fall within any
  of the specified polygons, and there's a need to associate these points
  with their closest polygon along with the proximity information.
}
\note{
This function requires that both `sf_obj_point` and `sf_obj_poly` have 
been properly projected and share the same CRS. Distances are calculated based 
on the CRS's unit, then converted to kilometers.
}
\examples{
# Assuming `points` and `polygons` are sf objects with appropriate geometries
sf_joined <- st_join_oob(sf_obj_point = points, sf_obj_poly = polygons, col_name = "region")
# This will add the region attribute to points, and for those outside any region,
# it provides the nearest region and the distance to it.

}
\seealso{
\code{\link[sf]{st_join}}, for the basic spatial join operation.
\code{\link[sf]{st_nearest_feature}}, and \code{\link[sf]{st_distance}} for nearest 
feature identification and distance calculations.
}
