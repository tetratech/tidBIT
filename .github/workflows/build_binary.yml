name: R package release build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-linux:
    runs-on: ubuntu-latest
    env:
      OS_TYPE: linux

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Configure CRAN mirror to RSPM
        run: |
          echo 'options(repos = c(CRAN = "https://packagemanager.rstudio.com/all/__linux__/jammy/latest"))' >> ~/.Rprofile

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgsl-dev libomp-dev libudunits2-dev libproj-dev libgdal-dev build-essential gcc gfortran

      - name: Install Key R Packages
        run: |
          Rscript -e 'install.packages(c("remotes", "desc", "devtools"))'

      - name: Install Dependencies with Retries
        run: |
          for i in {1..3}; do Rscript -e 'remotes::install_deps(dependencies = TRUE)' && break || sleep 15; done

      - name: Build Linux Binary
        run: |
          mkdir -p artifacts
          Rscript -e "devtools::build(binary = TRUE, path = 'artifacts')"

  build-macos:
    runs-on: macos-latest
    env:
      OS_TYPE: darwin

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Install Xcode Command Line Tools
        run: |
          xcode-select --install || echo "Command line tools already installed"

      - name: Install macOS System Dependencies
        run: |
          brew install gcc gdal proj libomp

      - name: Configure Makevars for macOS
        run: |
          mkdir -p ~/.R
          echo "CC=$(brew --prefix gcc)/bin/gcc-$(brew list gcc | grep gcc- | awk -F'-' '{print $2}')" >> ~/.R/Makevars
          echo "CXX=$(brew --prefix gcc)/bin/g++-$(brew list gcc | grep gcc- | awk -F'-' '{print $2}')" >> ~/.R/Makevars
          echo "CFLAGS=-fopenmp" >> ~/.R/Makevars
          echo "CXXFLAGS=-fopenmp" >> ~/.R/Makevars
          echo "LDFLAGS=-L$(brew --prefix libomp)/lib -lomp" >> ~/.R/Makevars

      - name: Install Key R Packages
        run: |
          Rscript -e 'install.packages(c("remotes", "desc", "devtools"))'

      - name: Install Dependencies with Retries
        run: |
          for i in {1..3}; do Rscript -e 'remotes::install_deps(dependencies = TRUE)' && break || sleep 15; done

      - name: Build macOS Binary
        run: |
          mkdir -p artifacts
          Rscript -e "devtools::build(binary = TRUE, path = 'artifacts')"

  build-windows:
    runs-on: windows-latest
    env:
      OS_TYPE: windows

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      - name: Install Rtools and Dependencies
        run: |
          choco install gsl
          choco install mingw
          choco install rtools

      - name: Install Key R Packages
        run: |
          Rscript -e 'install.packages(c("remotes", "desc", "devtools"))'

      - name: Install Dependencies
        run: |
          Rscript -e 'remotes::install_deps(dependencies = TRUE)'

      - name: Build Windows Binary
        run: |
          mkdir -p artifacts
          Rscript -e "devtools::build(binary = TRUE, path = 'artifacts')"

  release:
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create or Update GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.version }}"
          name: "v${{ env.version }} Release"
          body: "Release notes for version ${{ env.version }}."
          files: |
            artifacts/tidBIT_*.zip
            artifacts/tidBIT_*.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
