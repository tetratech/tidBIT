name: R package binary build

on:
  push:
    branches:
      - main  # Change to the branch where your code resides
  pull_request:
    branches:
      - main  # Build for pull requests too

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the repository using Node.js 16+
      - name: Checkout code
        uses: actions/checkout@v3  # Updated to v3 to address Node.js deprecation

      # Step 2: Set up R on the runner
      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      # Step 3: Install Pandoc (only needed if you're building vignettes)
      - name: Install Pandoc
        run: |
          choco install pandoc
          pandoc --version

      # Step 4: Install R dependencies
      - name: Install dependencies
        run: |
          Rscript -e 'install.packages("remotes")'
          Rscript -e 'remotes::install_deps(dependencies = TRUE)'

      # Step 5: Build the package and binary
      - name: Build package and binary
        run: |
          Rscript -e 'devtools::build(binary = TRUE)'  # Ensure binary is built

      # Step 6: Install Rtools (for Windows)
      - name: Install Rtools
        run: |
          Rscript -e 'install.packages("pkgbuild")'
          Rscript -e 'pkgbuild::check_build_tools()'

      # Step 7: Upload the built binary package as an artifact
      - name: Upload Windows binary
        uses: actions/upload-artifact@v3  # Updated to v3 for Node.js compatibility
        with:
          name: tidBIT-windows-binary
          path: "*.zip"  # Assuming the binary is a .zip file; adjust if needed

      # Optionally upload the source package if binary is not needed
      # - name: Upload Source Package
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: tidBIT-source-package
      #     path: "*.tar.gz"  # If a source package is built instead of a binary
