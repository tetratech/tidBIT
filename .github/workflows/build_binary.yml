name: R package binary build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      # Set up RSPM to use pre-built binaries
      - name: Configure CRAN mirror to RSPM
        run: |
          echo 'options(repos = c(CRAN = "https://packagemanager.rstudio.com/all/__linux__/jammy/latest"))' >> ~/.Rprofile

      # Install System Dependencies for GSL, OpenMP, and Required Tools
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgsl-dev libomp-dev build-essential

      # Ensure R API Libraries Are Linked Correctly
      - name: Set Compiler Environment Variables
        run: |
          mkdir -p ~/.R
          echo "PKG_CFLAGS=-fopenmp" >> ~/.R/Makevars
          echo "PKG_LIBS=-lgsl -lgslcblas -fopenmp -lm -lR" >> ~/.R/Makevars

      - name: Install Key Packages
        run: |
          Rscript -e 'install.packages(c("remotes", "desc", "devtools"))'

      - name: Install Dependencies with Retries
        run: |
          for i in {1..3}; do Rscript -e 'remotes::install_deps(dependencies = TRUE)' && break || sleep 15; done

      - name: Build Package and Binary
        env:
          PKG_CFLAGS: "-fopenmp"
          PKG_LIBS: "-lgsl -lgslcblas -fopenmp -lm -lR"
        run: |
          Rscript -e 'devtools::build(binary = TRUE)'

      - name: Get Version from DESCRIPTION
        id: get_version
        run: |
          version=$(Rscript -e 'cat(desc::desc_get_version())')
          echo "version=$version" >> $GITHUB_ENV

      - name: Create or Update GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.version }}"
          name: "v${{ env.version }} Release"
          body: "Release notes for version ${{ env.version }}."
          files: ${{ github.workspace }}/tidBIT_*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
