name: R package binary build

on:
  push:
    branches:
      - main  # Change to the branch where your code resides
  pull_request:
    branches:
      - main  # Build for pull requests too

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the repository (use v4 for Node.js 20)
      - name: Checkout code
        uses: actions/checkout@v4  # Update to v4

      # Step 2: Set up R on the runner
      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      # Step 3: Install Pandoc (if you're building vignettes)
      - name: Install Pandoc
        run: |
          choco install pandoc
          pandoc --version

      # Step 4: Install R dependencies
      - name: Install dependencies
        run: |
          Rscript -e 'install.packages("remotes")'
          Rscript -e 'remotes::install_deps(dependencies = TRUE)'

      # Step 5: Build the package and binary
      - name: Build package and binary
        run: |
          Rscript -e 'devtools::build(binary = TRUE)'  # Build the binary package

      # Step 6: Install Rtools (for Windows)
      - name: Install Rtools
        run: |
          Rscript -e 'install.packages("pkgbuild")'
          Rscript -e 'pkgbuild::check_build_tools()'

      # Step 7: Upload the built binary package as an artifact (use v4)
      - name: Upload Windows binary
        uses: actions/upload-artifact@v4  # Update to v4
        with:
          name: tidBIT-windows-binary
          path: "D:/a/tidBIT/tidBIT_*.zip"  # Use the correct file path based on the build output
