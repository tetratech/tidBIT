name: R package binary build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest  # Switch to ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up R on the runner
      - name: Set up R
        uses: r-lib/actions/setup-r@v2

      # Step 3: Install GSL (GNU Scientific Library)
      - name: Install GSL
        run: |
          sudo apt-get update
          sudo apt-get install -y libgsl-dev

      # Step 4: Install R dependencies
      - name: Install dependencies
        run: |
          Rscript -e 'install.packages("remotes")'
          Rscript -e 'remotes::install_deps(dependencies = TRUE)'
          Rscript -e 'if (!requireNamespace("devtools", quietly = TRUE)) install.packages("devtools")'

      # Step 5: Build the package and binary
      - name: Build package and binary
        run: |
          Rscript -e 'devtools::build(binary = TRUE)'  # Build the binary package

      # Step 6: Get the Version from DESCRIPTION (using R)
      - name: Get Version from DESCRIPTION
        id: get_version
        run: |
          version=$(Rscript -e 'cat(desc::desc_get_version())')
          echo "version=$version" >> $GITHUB_ENV

      # Step 7: Create or Update GitHub Release and Upload Binary
      - name: Create or Update GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ env.version }}"  # Use the dynamically obtained version
          name: "v${{ env.version }} Release"
          body: "Release notes for version ${{ env.version }}."
          files: ${{ github.workspace }}/tidBIT_*.zip  # Specify the binary file to upload
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
